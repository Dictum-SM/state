#!/bin/bash

# List the resource deletions from the existing state to the incoming state
get-deletions(){
  EXISTING=$1
  INCOMING=$2
while IFS='' read -r LINE || [ -n "${LINE}" ]
  do
    KEY=$(grep -o "^.*\:" <<< "${LINE}")
    if ! grep -q "${KEY}" ${INCOMING}
    then 
        echo ${LINE}
    fi
  done < ${EXISTING}
}

# Returns the value of the current resource KV pair
get-value(){

 echo $(grep -o "\s.*" <<< $1)

}

# Returns the key of the current resource KV pair
get-key(){

  echo $(grep -o "^.*\:" <<< $1)

}

# Strips down 
get-pairs-stdin(){

  yq r - data | sed 's/"//g'


}

get-pairs-arg(){

  yq r $1 data | sed 's/"//g'

}

# Retrieve the env state
get-configmap(){
    
  kubectl get configmap -n state-machine state -o yaml

}

# get-workspace retrieves the initialized workspace literal path
get-workspace(){

  until [[ $PWD = '/' || grep -Eq "(^| )\.state( |$)" <<< $(ls -a) ]]
  do
    cd ..
  done

  if [ $PWD = '/' ] 
  then
    echo "No Dictum initialized workspace found"
    exit 1 
  fi

  echo $(pwd)

}

store-state(){

  kubectl apply -f ${WORKDIR}/.state-ns
  kubectl apply -f ${WORKDIR}/.state

}